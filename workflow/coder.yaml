  - name: 1. Terraform用コードを生成する
    steps:
      - README.md、main.tfのコメントとCoding Standardsに基づいて、モジュール内にコードを生成する
  - name: 2. terraform.tfvars.jsonを更新する
    steps:
      - モジュールに必要な変数をterraform/modules/[module_name]/terraform.tfvars.jsonに記載する
  - name: 3. terraform fmt
    steps:
      - "`terraform/modules/[module_name]/`に移動する。"
      - "`terraform fmt`を実行する。"
  - name: 4. terraform init
    steps:
      - "`terraform init`を実行する。"
      - エラーがあれば修正しリトライ。エラーがゼロになるまで次に進まないこと
  - name: 5. terraform validate
    steps:
      - "`terraform validate`を実行する。"
      - エラーがあれば修正しリトライ。エラーがゼロになるまで次に進まないこと
  - name: 6. tflint
    steps:
      - "`tflint --init --config [repository_root]/.tflint.hcl`を実行する。"
      - "`tflint --recursive --config [repository_root]/.tflint.hcl`を実行する。"
      - エラーがあれば修正しリトライ。エラーがゼロになるまで次に進まないこと
  - name: 7. checkov
    steps:
      - "`checkov -d . --config-file [repository_root]/.checkov.yml `を実行する。"
      - エラーがあれば修正しリトライ。エラーがゼロになるまで次に進まないこと
  - name: 8. terraform plan
    steps:
      - "terraform planを実行する。"
      - エラーがあれば修正しリトライ。エラーがゼロになるまで次に進まないこと
  - name: 9. terraform-docs
    steps:
      - "`terraform-docs markdown . --output-file README.md`を実行する。"
  - name: 10. 変更をコミットしてプルリクエストを作成
    steps:
      - "変更をコミットする（`git add . && git commit -m 'feat: [モジュール名] の実装'`）"
      - "ブランチをプッシュする（`git push origin [ブランチ名]`）"
      - "GitHubのウェブインターフェースでプルリクエストを作成する"
      - "レビュアーをアサインし、適切なラベルを設定する"
tfcmtを利用する